{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/margipatel/Documents/react/margi-example/03-More-React-Hooks-useContext-useReducer-useCallback-useMemo/clip04-Updating-Example-To-Full-Conf-Site/src/Speakers.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\n\nvar Speakers = function Speakers(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  // const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  // const [speakingSunday, setSpeakingSunday] = useState(true);\n  // const [speakerList, setSpeakerList] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   new Promise(function(resolve) {\n  //     setTimeout(function() {\n  //       resolve();\n  //     }, 1000);\n  //   }).then(() => {\n  //     setIsLoading(false);\n  //     const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n  //       return (speakingSaturday && sat) || (speakingSunday && sun);\n  //     });\n  //     setSpeakerList(speakerListServerFilter);\n  //   });\n  //   return () => {\n  //     console.log(\"cleanup\");\n  //   };\n  // }, []); // [speakingSunday, speakingSaturday]);\n  // const handleChangeSaturday = () => {\n  //   setSpeakingSaturday(!speakingSaturday);\n  // };\n  // const speakerListFiltered = isLoading\n  //   ? []\n  //   : speakerList\n  //       .filter(\n  //         ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n  //       )\n  //       .sort(function(a, b) {\n  //         if (a.firstName < b.firstName) {\n  //           return -1;\n  //         }\n  //         if (a.firstName > b.firstName) {\n  //           return 1;\n  //         }\n  //         return 0;\n  //       });\n  // const handleChangeSunday = () => {\n  //   setSpeakingSunday(!speakingSunday);\n  // };\n  // const heartFavoriteHandler = (e, favoriteValue) => {\n  //   e.preventDefault();\n  //   const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n  //   setSpeakerList(speakerList.map(item => {\n  //     if (item.id === sessionId) {\n  //       item.favorite = favoriteValue;\n  //       return item;\n  //     }\n  //     return item;\n  //   }));\n  //   //console.log(\"changing session favorte to \" + favoriteValue);\n  // };\n  // if (isLoading) return <div>Loading...</div>;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-deck\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, speakerListFiltered.map(function (_ref2) {\n    var id = _ref2.id,\n        firstName = _ref2.firstName,\n        lastName = _ref2.lastName,\n        bio = _ref2.bio,\n        favorite = _ref2.favorite;\n    return /*#__PURE__*/React.createElement(SpeakerDetail, {\n      key: id,\n      id: id // favorite={favorite}\n      // onHeartFavoriteHandler={heartFavoriteHandler}\n      // firstName={firstName}\n      // lastName={lastName}\n      // bio={bio}\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    });\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/margipatel/Documents/react/margi-example/03-More-React-Hooks-useContext-useReducer-useCallback-useMemo/clip04-Updating-Example-To-Full-Conf-Site/src/Speakers.js"],"names":["React","useState","useEffect","Header","Menu","SpeakerData","SpeakerDetail","Speakers","speakerListFiltered","map","id","firstName","lastName","bio","favorite"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,OAAO,sCAAP;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAQ;AAAA;;AACvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA2BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,mBAAmB,CAACC,GAApB,CACC,iBAAgD;AAAA,QAA7CC,EAA6C,SAA7CA,EAA6C;AAAA,QAAzCC,SAAyC,SAAzCA,SAAyC;AAAA,QAA9BC,QAA8B,SAA9BA,QAA8B;AAAA,QAApBC,GAAoB,SAApBA,GAAoB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AAC9C,wBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEJ,EADP;AAEE,MAAA,EAAE,EAAEA,EAFN,CAGE;AACA;AACA;AACA;AACA;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAbF,CADH,CADF,CA3BF,CAHF,CADF;AAqDD,CArHD;;AAuHA,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\n\nconst Speakers = ({}) => {\n  // const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  // const [speakingSunday, setSpeakingSunday] = useState(true);\n\n  // const [speakerList, setSpeakerList] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   new Promise(function(resolve) {\n  //     setTimeout(function() {\n  //       resolve();\n  //     }, 1000);\n  //   }).then(() => {\n  //     setIsLoading(false);\n  //     const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n  //       return (speakingSaturday && sat) || (speakingSunday && sun);\n  //     });\n  //     setSpeakerList(speakerListServerFilter);\n  //   });\n  //   return () => {\n  //     console.log(\"cleanup\");\n  //   };\n  // }, []); // [speakingSunday, speakingSaturday]);\n\n  // const handleChangeSaturday = () => {\n  //   setSpeakingSaturday(!speakingSaturday);\n  // };\n\n  // const speakerListFiltered = isLoading\n  //   ? []\n  //   : speakerList\n  //       .filter(\n  //         ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n  //       )\n  //       .sort(function(a, b) {\n  //         if (a.firstName < b.firstName) {\n  //           return -1;\n  //         }\n  //         if (a.firstName > b.firstName) {\n  //           return 1;\n  //         }\n  //         return 0;\n  //       });\n\n  // const handleChangeSunday = () => {\n  //   setSpeakingSunday(!speakingSunday);\n  // };\n\n  // const heartFavoriteHandler = (e, favoriteValue) => {\n  //   e.preventDefault();\n  //   const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n  //   setSpeakerList(speakerList.map(item => {\n  //     if (item.id === sessionId) {\n  //       item.favorite = favoriteValue;\n  //       return item;\n  //     }\n  //     return item;\n  //   }));\n  //   //console.log(\"changing session favorte to \" + favoriteValue);\n  // };\n\n  // if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <div className=\"container\">\n        {/* <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n          <div className=\"hide\">\n            <div className=\"form-check-inline\">\n              <label className=\"form-check-label\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  onChange={handleChangeSaturday}\n                  checked={speakingSaturday}\n                />\n                Saturday Speakers\n              </label>\n            </div>\n            <div className=\"form-check-inline\">\n              <label className=\"form-check-label\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  onChange={handleChangeSunday}\n                  checked={speakingSunday}\n                />\n                Sunday Speakers\n              </label>\n            </div>\n          </div>\n        </div> */}\n        <div className=\"row\">\n          <div className=\"card-deck\">\n            {speakerListFiltered.map(\n              ({ id, firstName, lastName, bio, favorite }) => {\n                return (\n                  <SpeakerDetail\n                    key={id}\n                    id={id}\n                    // favorite={favorite}\n                    // onHeartFavoriteHandler={heartFavoriteHandler}\n                    // firstName={firstName}\n                    // lastName={lastName}\n                    // bio={bio}\n                  />\n                );\n              }\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Speakers;\n\n"]},"metadata":{},"sourceType":"module"}