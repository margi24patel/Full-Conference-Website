{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/margipatel/Documents/react/margi-example/03-More-React-Hooks-useContext-useReducer-useCallback-useMemo/clip04-Updating-Example-To-Full-Conf-Site/src/Speakers.js\";\n\n// import React, { useState, useEffect} from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"../static/site.css\";\n// import { Header } from \"../src/Header\";\n// import { Menu } from \"../src/Menu\";\n// import SpeakerData from \"./SpeakerData\";\n// import SpeakerDetail from \"./SpeakerDetail\";\n// const Speakers = ({}) => {\n//   const [speakingSaturday, setSpeakingSaturday] = useState(true);\n//   const [speakingSunday, setSpeakingSunday] = useState(true);\n//   const [speakerList, setSpeakerList] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   useEffect(() => {\n//     setIsLoading(true);\n//     new Promise(function(resolve) {\n//       setTimeout(function() {\n//         resolve();\n//       }, 1000);\n//     }).then(() => {\n//       setIsLoading(false);\n//       const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n//         return (speakingSaturday && sat) || (speakingSunday && sun);\n//       });\n//       setSpeakerList(speakerListServerFilter);\n//     });\n//     return () => {\n//       console.log(\"cleanup\");\n//     };\n//   }, []); // [speakingSunday, speakingSaturday]);\n//   const handleChangeSaturday = () => {\n//     setSpeakingSaturday(!speakingSaturday);\n//   };\n//   const speakerListFiltered = isLoading\n//     ? []\n//     : speakerList\n//         .filter(\n//           ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n//         )\n//         .sort(function(a, b) {\n//           if (a.firstName < b.firstName) {\n//             return -1;\n//           }\n//           if (a.firstName > b.firstName) {\n//             return 1;\n//           }\n//           return 0;\n//         });\n//   const handleChangeSunday = () => {\n//     setSpeakingSunday(!speakingSunday);\n//   };\n//   const heartFavoriteHandler = (e, favoriteValue) => {\n//     e.preventDefault();\n//     const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n//     setSpeakerList(speakerList.map(item => {\n//       if (item.id === sessionId) {\n//         item.favorite = favoriteValue;\n//         return item;\n//       }\n//       return item;\n//     }));\n//     //console.log(\"changing session favorte to \" + favoriteValue);\n//   };\n//   if (isLoading) return <div>Loading...</div>;\n//   return (\n//     <div>\n//       <Header />\n//       <Menu />\n//       <div className=\"container\">\n//         <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n//           <div className=\"hide\">\n//             <div className=\"form-check-inline\">\n//               <label className=\"form-check-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"form-check-input\"\n//                   onChange={handleChangeSaturday}\n//                   checked={speakingSaturday}\n//                 />\n//                 Saturday Speakers\n//               </label>\n//             </div>\n//             <div className=\"form-check-inline\">\n//               <label className=\"form-check-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"form-check-input\"\n//                   onChange={handleChangeSunday}\n//                   checked={speakingSunday}\n//                 />\n//                 Sunday Speakers\n//               </label>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"card-deck\">\n//             {speakerListFiltered.map(\n//               ({ id, firstName, lastName, bio, favorite }) => {\n//                 return (\n//                   <SpeakerDetail\n//                     key={id}\n//                     id={id}\n//                     favorite={favorite}\n//                     onHeartFavoriteHandler={heartFavoriteHandler}\n//                     firstName={firstName}\n//                     lastName={lastName}\n//                     bio={bio}\n//                   />\n//                 );\n//               }\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Speakers;\nimport React, { useRef, useEffect, useState } from \"react\";\n\nvar Speakers = function Speakers(_ref) {\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/static/speakers/bw/Speaker-187.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/static/speakers/Speaker-187.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/margipatel/Documents/react/margi-example/03-More-React-Hooks-useContext-useReducer-useCallback-useMemo/clip04-Updating-Example-To-Full-Conf-Site/src/Speakers.js"],"names":["React","useRef","useEffect","useState","Speakers","primaryImg","secondaryImg"],"mappingseC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAE/C,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,qCADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AACE,IAAA,GAAG,EAAC,kCADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAUH,CAZD;;AAcA,eAAeF,QAAf","sourcesContent":["// import React, { useState, useEffect} from \"react\";\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"../static/site.css\";\n// import { Header } from \"../src/Header\";\n// import { Menu } from \"../src/Menu\";\n// import SpeakerData from \"./SpeakerData\";\n// import SpeakerDetail from \"./SpeakerDetail\";\n\n// const Speakers = ({}) => {\n//   const [speakingSaturday, setSpeakingSaturday] = useState(true);\n//   const [speakingSunday, setSpeakingSunday] = useState(true);\n\n//   const [speakerList, setSpeakerList] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     new Promise(function(resolve) {\n//       setTimeout(function() {\n//         resolve();\n//       }, 1000);\n//     }).then(() => {\n//       setIsLoading(false);\n//       const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n//         return (speakingSaturday && sat) || (speakingSunday && sun);\n//       });\n//       setSpeakerList(speakerListServerFilter);\n//     });\n//     return () => {\n//       console.log(\"cleanup\");\n//     };\n//   }, []); // [speakingSunday, speakingSaturday]);\n\n//   const handleChangeSaturday = () => {\n//     setSpeakingSaturday(!speakingSaturday);\n//   };\n\n//   const speakerListFiltered = isLoading\n//     ? []\n//     : speakerList\n//         .filter(\n//           ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n//         )\n//         .sort(function(a, b) {\n//           if (a.firstName < b.firstName) {\n//             return -1;\n//           }\n//           if (a.firstName > b.firstName) {\n//             return 1;\n//           }\n//           return 0;\n//         });\n\n//   const handleChangeSunday = () => {\n//     setSpeakingSunday(!speakingSunday);\n//   };\n\n//   const heartFavoriteHandler = (e, favoriteValue) => {\n//     e.preventDefault();\n//     const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n//     setSpeakerList(speakerList.map(item => {\n//       if (item.id === sessionId) {\n//         item.favorite = favoriteValue;\n//         return item;\n//       }\n//       return item;\n//     }));\n//     //console.log(\"changing session favorte to \" + favoriteValue);\n//   };\n\n//   if (isLoading) return <div>Loading...</div>;\n\n//   return (\n//     <div>\n//       <Header />\n//       <Menu />\n//       <div className=\"container\">\n//         <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n//           <div className=\"hide\">\n//             <div className=\"form-check-inline\">\n//               <label className=\"form-check-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"form-check-input\"\n//                   onChange={handleChangeSaturday}\n//                   checked={speakingSaturday}\n//                 />\n//                 Saturday Speakers\n//               </label>\n//             </div>\n//             <div className=\"form-check-inline\">\n//               <label className=\"form-check-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"form-check-input\"\n//                   onChange={handleChangeSunday}\n//                   checked={speakingSunday}\n//                 />\n//                 Sunday Speakers\n//               </label>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"card-deck\">\n//             {speakerListFiltered.map(\n//               ({ id, firstName, lastName, bio, favorite }) => {\n//                 return (\n//                   <SpeakerDetail\n//                     key={id}\n//                     id={id}\n//                     favorite={favorite}\n//                     onHeartFavoriteHandler={heartFavoriteHandler}\n//                     firstName={firstName}\n//                     lastName={lastName}\n//                     bio={bio}\n//                   />\n//                 );\n//               }\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Speakers;\n\n\nimport React, {useRef, useEffect, useState} from \"react\";\n\nconst Speakers = ({ primaryImg, secondaryImg }) => {\n\n    return (\n      <div>\n        <img \n          src='/static/speakers/bw/Speaker-187.jpg' \n        />\n        <img \n          src='/static/speakers/Speaker-187.jpg' \n        />\n      </div>\n    );\n}\n\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}